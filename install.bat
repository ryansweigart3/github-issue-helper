@echo off
REM Tissue Installation Script for Windows
REM This script ensures a clean installation without package conflicts

echo ü©π Tissue Installation Script (Windows)
echo ========================================

REM Check if Python is available
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Python is required but not found
    pause
    exit /b 1
)

echo ‚úÖ Python found
python --version

REM Create virtual environment
echo üì¶ Creating virtual environment...
if exist venv (
    echo ‚ö†Ô∏è  Removing existing venv directory
    rmdir /s /q venv
)

python -m venv venv

REM Activate virtual environment
echo üîÑ Activating virtual environment...
call venv\Scripts\activate.bat

REM Upgrade pip
echo ‚¨ÜÔ∏è  Upgrading pip...
python -m pip install --upgrade pip

REM Remove any conflicting packages
echo üßπ Removing any conflicting 'github' packages...
pip uninstall -y github 2>nul
pip uninstall -y PyGithub 2>nul

REM Install core dependencies explicitly
echo üì¶ Installing core dependencies...
pip install "PyGithub>=1.58.0"
pip install "click>=8.0.0"
pip install "pandas>=1.5.0"

REM Install development dependencies
echo üîß Installing development dependencies...
pip install "pytest>=7.0.0"
pip install "pytest-cov>=4.0.0"

REM Install the package in development mode
echo üî® Installing Tissue in development mode...
pip install -e .

REM Force reinstall to ensure console scripts are updated
echo üîÑ Updating console scripts...
pip install --force-reinstall --no-deps -e .

REM Verify installation
echo ‚úÖ Verifying installation...
python -c "try: from github import Github, GithubException; print('‚úÖ PyGithub imported successfully'); from src.csv_parser import CSVParser; print('‚úÖ CSV Parser imported successfully'); from src.github_client import GitHubClient; print('‚úÖ GitHub Client imported successfully'); print('‚úÖ All core modules imported successfully') except ImportError as e: print(f'‚ùå Import failed: {e}'); exit(1)"

REM Test CLI command
echo üß™ Testing CLI command...
python -m src.main --help >nul 2>&1
if errorlevel 1 (
    tissue --help >nul 2>&1
    if errorlevel 1 (
        echo ‚ö†Ô∏è  CLI commands need troubleshooting, but core install is complete
    ) else (
        echo ‚úÖ tissue command works!
    )
) else (
    echo ‚úÖ CLI module works!
)

echo.
echo üéâ Installation completed successfully!
echo.
echo To activate the environment in the future, run:
echo   venv\Scripts\activate.bat
echo.
echo To use tissue, try either:
echo   tissue --help                # If tissue command is in PATH  
echo   python -m src.main --help    # Alternative method
echo.
echo Example usage:
echo   tissue --file issues.csv --repo owner/repo --token ghp_xxx

pause
